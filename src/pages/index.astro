---
import Distritos from '@/components/home/distritos'
import { GET } from '@/pages/api/distritos/index'
import { truncateText } from '@/utils/formatter'
import Layout from '@/layouts/layout.astro'
import Hero from '@/components/hero.astro'
import { API_STATES } from './api/_states'
import type { Distrito } from '@/types'
import { SB_COKIE_SESSION_NAME, SITE_NAME } from '@/constants'
import { supabase } from '@/lib/supabase'
import type { User } from '@supabase/supabase-js'

const { cookies } = Astro

const accessToken = cookies.get(SB_COKIE_SESSION_NAME.acesss)
const refreshToken = cookies.get(SB_COKIE_SESSION_NAME.refresh)

let user: User | null = null

if (accessToken && refreshToken) {
  const { data, error } = await supabase.auth.setSession({
    access_token: accessToken.value,
    refresh_token: refreshToken.value
  })

  if (error) {
    console.error(error)
  }

  user = error ? null : data.user
}

const response = await GET(Astro)
const { statusText, data: apiResponse } = await response.json()

const distritos =
  statusText === API_STATES.error ? null : (apiResponse.data as Distrito[])

const distritosWithSortDescriptions =
  distritos?.map((distrito) => ({
    ...distrito,
    description: truncateText(distrito.description, { maxWords: 15 })
  })) ?? null
---

<Layout title={SITE_NAME} user={user}>
  <main class="flex flex-col gap-12 px-8 md:px-28">
    <Hero />
    <Distritos
      initialDistritos={distritosWithSortDescriptions}
      client:visible
    />
  </main>
</Layout>
