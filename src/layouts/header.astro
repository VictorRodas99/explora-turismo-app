---
import type { PathsWithoutIconsAsEntries } from './utils/get-icon-from-pathname'
import getIconFromPathName from './utils/get-icon-from-pathname'
import { getWebsitePaths } from '@/utils/general'
import Search from '@/components/header/search/index'
import '@/styles/header-blur.css'

const { pathname } = Astro.url
const pathsWithoutIcons = getWebsitePaths({ pathname })

const paths = Object.fromEntries(
  (Object.entries(pathsWithoutIcons) as PathsWithoutIconsAsEntries).map(
    ([name, path]) => [
      name,
      { ...path, icon: getIconFromPathName(name, pathsWithoutIcons) }
    ]
  )
)
---

<header class="w-full fixed left-0 top-0 px-2 md:px-12 pt-7 z-50">
  <nav
    class="flex justify-between items-center md:grid md:grid-cols-4 md:place-items-center text-sm"
  >
    <div></div>

    <ul
      id="navigation-container"
      class="flex items-center justify-center gap-2 md:gap-5 md:col-span-2 border-2 border-primary rounded-full p-2 transition-all duration-300"
    >
      {
        Object.values(paths).map(({ icon: Icon, ...path }) =>
          path.url === '/' ? (
            <li>
              <a
                href={path.url}
                class:list={[
                  'p-1 px-2 grid place-items-center truncate',
                  { 'bg-primary text-white rounded-full': path.isCurrent },
                  { 'hover:text-primary transition-colors': !path.isCurrent }
                ]}
              >
                <span class="hidden md:block">{path.label}</span>
                <span class="md:hidden">{Icon ? <Icon /> : path.label}</span>
              </a>
            </li>
          ) : (
            <li>
              <button
                class:list={[
                  'p-1 px-2 grid place-items-center truncate',
                  { 'bg-primary text-white rounded-full': path.isCurrent },
                  { 'hover:text-primary transition-colors': !path.isCurrent }
                ]}
              >
                <span class="hidden md:block">{path.label}</span>
                <span class="md:hidden">{Icon ? <Icon /> : path.label}</span>
              </button>
            </li>
          )
        )
      }
    </ul>

    <Search client:load />
  </nav>
</header>

<script>
  import blurBackgroundOnScroll from '@/utils/blur-on-scroll'

  blurBackgroundOnScroll({ element: document.querySelector('#navigation-container') })
</script>